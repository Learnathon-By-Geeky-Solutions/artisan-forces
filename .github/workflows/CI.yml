name: CI Workflow

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          coverage: pcov

      - name: Install Composer dependencies
        run: |
          composer install --prefer-dist --no-interaction

      - name: Run PHP tests with coverage
        run: |
          ./vendor/bin/phpunit --coverage-clover=coverage.xml

      - name: Upload PHP coverage report
        uses: actions/upload-artifact@v3
        with:
          name: php-coverage-report
          path: backend/coverage.xml

  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Node.js dependencies
        run: npm ci

      - name: Run frontend tests with coverage
        run: |
          npm test -- --coverage

      - name: Upload JS coverage report
        uses: actions/upload-artifact@v3
        with:
          name: js-coverage-report
          path: frontend/coverage/lcov.info

  sonarcloud:
    needs: [backend, frontend]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download coverage reports
        uses: actions/download-artifact@v3
        with:
          path: coverage-reports

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
        with:
          args: >
            -Dsonar.organization=learnathon-by-geeky-solutions
            -Dsonar.projectKey=Learnathon-By-Geeky-Solutions_artisan-forces
            -Dsonar.sources=.
            -Dsonar.php.coverage.reportPaths=coverage-reports/php-coverage-report/coverage.xml
            -Dsonar.javascript.lcov.reportPaths=coverage-reports/js-coverage-report/lcov.info
            -Dsonar.coverage.exclusions=**/tests/**,**/node_modules/**,**/vendor/**
